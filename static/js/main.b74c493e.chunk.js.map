{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"uOAIA,SAASA,EAAgBC,GAavB,IAXA,IAAMC,EAAQ,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAGEC,EAAI,EAAGA,EAAGD,EAAME,OAAQD,IAAK,CAAC,IAAD,cACpBD,EAAMC,GADc,GAC7BE,EAD6B,KAC3BC,EAD2B,KACzBC,EADyB,KAIpC,GAAGN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACnE,MAAO,CAACF,EAAEC,EAAEC,GAGhB,OAAO,KAGT,SAASC,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,2KACSV,GAAI,IAAD,OACd,OACA,kBAACK,EAAD,CACEI,MAAOE,KAAKL,MAAMR,QAAQE,GAC1BQ,QAAS,kBAAI,EAAKF,MAAME,QAAQR,Q,+BAKlC,OACE,6BACE,yBAAKO,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAzBTC,IAAMC,WAgCpBC,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRnB,QAASoB,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPrB,GACV,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DtB,EADUmB,EAAQA,EAAQhB,OAAQ,GAChBH,QAAQwB,QAC5BzB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKW,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvB1B,QAASA,KAEXsB,WAAYH,EAAQhB,OACpBoB,SAAUV,KAAKK,MAAMK,a,6BAIlBI,GACLd,KAAKY,SAAS,CACZH,WAAWK,EACXJ,QAAUI,EAAM,IAAO,M,+BAKjB,IAkBJC,EAlBG,OACDT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS/B,EAAgB8B,EAAQ7B,SAEjC+B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,wBAAIE,IAAKF,GACP,4BAAQvB,QAAS,kBAAK,EAAK0B,OAAOH,KAC/BC,OAaT,OALEN,EADEE,EACO,WAAaD,EAAQ7B,QAAQ8B,EAAO,IAEpC,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAK,KAItD,yBAAKd,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEZ,QAAS6B,EAAQ7B,QACjBU,QAAS,SAACR,GAAD,OAAO,EAAKmC,YAAYnC,OAGrC,yBAAKO,UAAU,aACb,6BAAMmB,GACN,4BAAKG,S,GAxEIhB,IAAMC,WAiFzBsB,IAASC,OAAO,kBAACtB,EAAD,MAAUuB,SAASC,eAAe,W","file":"static/js/main.b74c493e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction calculateWinner(squares) {\n  // Combinaciones ganadoras\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n\n  for (let i = 0; i< lines.length; i++) {\n    const [a,b,c] = lines[i];  // Destructuring for each line: {a: 0, b: 1, c: 2}, {a: 3, b: 4, c: 5}\n\n    // Compare if the same player has one of the winner combination\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a,b,c]\n    }\n  }\n  return null;\n}\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n    <Square \n      value={this.props.squares[i]}\n      onClick={()=>this.props.onClick(i)}\n    />);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length -1]\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {    // if the value of squares[i] is diferent of null, return\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    })\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber:step,\n      xIsNext: (step %2) === 0\n    })\n  }\n\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n      'Go to move #' + move:\n      'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={()=> this.jumpTo(move)} >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + current.squares[winner[0]];\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}